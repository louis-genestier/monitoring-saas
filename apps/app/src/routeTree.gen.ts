/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as VerifierEmailVerificationTokenImport } from './routes/verifier-email.$verificationToken'
import { Route as AuthenticatedSuiviAjouterImport } from './routes/_authenticated/suivi/ajouter'
import { Route as AuthenticatedSuiviTrackedProductIdIndexImport } from './routes/_authenticated/suivi/$trackedProductId/index'
import { Route as AuthenticatedSuiviTrackedProductIdModifierImport } from './routes/_authenticated/suivi/$trackedProductId/modifier'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const VerifierEmailVerificationTokenRoute =
  VerifierEmailVerificationTokenImport.update({
    path: '/verifier-email/$verificationToken',
    getParentRoute: () => rootRoute,
  } as any)

const AuthenticatedSuiviAjouterRoute = AuthenticatedSuiviAjouterImport.update({
  path: '/suivi/ajouter',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSuiviTrackedProductIdIndexRoute =
  AuthenticatedSuiviTrackedProductIdIndexImport.update({
    path: '/suivi/$trackedProductId/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedSuiviTrackedProductIdModifierRoute =
  AuthenticatedSuiviTrackedProductIdModifierImport.update({
    path: '/suivi/$trackedProductId/modifier',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/verifier-email/$verificationToken': {
      id: '/verifier-email/$verificationToken'
      path: '/verifier-email/$verificationToken'
      fullPath: '/verifier-email/$verificationToken'
      preLoaderRoute: typeof VerifierEmailVerificationTokenImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/suivi/ajouter': {
      id: '/_authenticated/suivi/ajouter'
      path: '/suivi/ajouter'
      fullPath: '/suivi/ajouter'
      preLoaderRoute: typeof AuthenticatedSuiviAjouterImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/suivi/$trackedProductId/modifier': {
      id: '/_authenticated/suivi/$trackedProductId/modifier'
      path: '/suivi/$trackedProductId/modifier'
      fullPath: '/suivi/$trackedProductId/modifier'
      preLoaderRoute: typeof AuthenticatedSuiviTrackedProductIdModifierImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/suivi/$trackedProductId/': {
      id: '/_authenticated/suivi/$trackedProductId/'
      path: '/suivi/$trackedProductId'
      fullPath: '/suivi/$trackedProductId'
      preLoaderRoute: typeof AuthenticatedSuiviTrackedProductIdIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthenticatedRoute: AuthenticatedRoute.addChildren({
    AuthenticatedIndexRoute,
    AuthenticatedSuiviAjouterRoute,
    AuthenticatedSuiviTrackedProductIdModifierRoute,
    AuthenticatedSuiviTrackedProductIdIndexRoute,
  }),
  LoginRoute,
  VerifierEmailVerificationTokenRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/verifier-email/$verificationToken"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/suivi/ajouter",
        "/_authenticated/suivi/$trackedProductId/modifier",
        "/_authenticated/suivi/$trackedProductId/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/verifier-email/$verificationToken": {
      "filePath": "verifier-email.$verificationToken.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.ts",
      "parent": "/_authenticated"
    },
    "/_authenticated/suivi/ajouter": {
      "filePath": "_authenticated/suivi/ajouter.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/suivi/$trackedProductId/modifier": {
      "filePath": "_authenticated/suivi/$trackedProductId/modifier.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/suivi/$trackedProductId/": {
      "filePath": "_authenticated/suivi/$trackedProductId/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
